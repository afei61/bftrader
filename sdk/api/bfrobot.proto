syntax = "proto3";

// option optimize_for = CODE_SIZE;
// option cc_enable_arenas = true;

package bftrader.bfrobot;

import "bftrader.proto";

//
// 机器人服务，实现进程外策略
// 策略底层由一个robot来驱动，采用单线程实现
// robot负责和cta/gateway和datafeed通信
//
service BfRobotService{
    // 活跃检测
    // 也可以在这里做收盘处理，如果很长时间没有收到tick
    rpc OnPing(BfPingData) returns (BfPingData) {}
    
    // 行情回报
    rpc OnTick(BfTickData) returns (BfVoid) {}
        
    // 成交回报
    rpc OnTrade(BfTradeData) returns (BfVoid) {}
    
    // 委托回报
    rpc OnOrder(BfOrderData) returns (BfVoid) {}

    // 生命周期控制
    rpc OnInit(BfVoid) returns (BfVoid) {}
    rpc OnStart(BfVoid) returns (BfVoid) {}
    rpc OnStop(BfVoid) returns (BfVoid) {}
}
